Module Tests
Private Type tTest
    Val() As Long
    l As Long
    i As Integer
End Type
Private Sub TestType()
    Dim tt As tTest, a&
    
    tt = GetTypeExempl(a)
    Debug.Print VarPtr(tt.Val(0))
End Sub

Private Function GetTypeExempl(a&) As tTest
    With GetTypeExempl
        .Val = Array(2, 5)
        Debug.Print VarPtr(.Val(0))
    End With
End Function
Private Sub TestAny()
    Dim lAr() As Long
    ReDim lAr(3)
    lAr(2) = 125
    Debug.Print VarPtr(lAr(0))
    TestAny_ lAr
End Sub
Private Sub TestAny_(args() As Any)
    Debug.Print VarPtr(args(0))
End Sub
Private Sub TestString()
    Const sConst As String = "dcba"
    Dim sFix As string * 4 = "abcd"
    Dim iAr(3) As Integer
    Dim pStr As LongPtr, pVar As LongPtr
    
    
    ' CopyMemory iAr(0), ByVal VarPtr(sFix), 8
    CopyMemory iAr(0), ByVal sFix, 4
    
    
    pVar = VarPtr(sConst)
    GetMemPtr pVar, pStr
    CopyMemory iAr(0), ByVal pStr, 8
    
    Debug.Print StrPtr(sConst)
    Debug.Print StrPtr(sConst)
    Debug.Print StrPtr(sFix)
    Debug.Print StrPtr(sFix)
End Sub
Sub TestFixString(Optional ByVal sFix As String)
    
End Sub
Private Type t4charString
    sFix As string * 4
End Type
Private Type t4charInteger
    iChars(3) As Integer
End Type

Private Sub Testt4charString()
    Dim t4c As t4charString, t4i As t4charInteger, iChars(3) As Integer
    Dim pStrBuf As LongPtr, p2 As LongPtr
    t4c.sFix = "abcd"
    LSet t4i = t4c
    GetMemPtr_ t4c, pStrBuf
    GetMemPtr_ t4c, pStrBuf
    CopyMemory p2, ByVal pStrBuf, LenB(Of LongPtr)
    CopyMemory iChars(0), ByVal pStrBuf, 8
    Debug.Print pStrBuf
    
    Testt4charString_ t4c
End Sub
Private Sub TestMovePtr()
    Dim pSA As LongPtr, pSA2 As LongPtr
    Dim xAr() As XL12Ptr, xAr2() As XL12Ptr
    ReDim xAr(1)
    xAr(1).ptr = 456
    pSA2 = GetPtr(xAr)
    MovePtr pSA, xAr
    
    PutPtr(xAr2) = pSA
    ' PutPtr(xAr) = 0
End Sub
Private Sub Testt4charString_(t4c As t4charString)
    Dim pStrBuf As LongPtr
    GetMemPtr_ t4c, pStrBuf
    Debug.Print pStrBuf
End Sub
Private Sub TestAddressOfOwerload()
    Dim pFn As LongPtr
    pFn = GetAddr(AddressOf Excel12v)
End Sub
Private Function GetAddr(ByVal lpFn As LongPtr) As LongPtr
    Return lpFn
End Function
Private Sub TestPreseveSigFalse()
    Dim d1#, l1&, d2#, l2&
    
    ' d1 = 123.456
    ' d2 = GetDbl(d1)
    l1 = 854
    ' put4
    ' d1 = GetLng(l1)
    PutLng(l2) = l1
    ' l2 = GetLng(l1)
End Sub
Private Sub TestEraseArray()
    Dim dAr#()
    ReDim dAr(3)
    Erase dAr
    Debug.Print UBound(dAr)
End Sub
' Private Sub TestLset()
'     Dim d#, ll^, d2#
    
'     d = 456.8798
'     LSet ll = d
'     LSet d2 = ll
    
' End Sub
Private Sub TestTypeOfAddressOf()
    Dim sAr() As String = Split("sdfda, kj;lkljk, iuorew", ", ")
    
    Debug.Print GetSA(sAr)
    CType(Of SimpleSub_Deleg)(AddressOf SimpleSub)(sAr)
    
End Sub
Private Delegate Sub SimpleSub_Deleg (var As Any)
Private Sub SimpleSub(arg As LongPtr)
    Debug.Print arg
End Sub
End Module